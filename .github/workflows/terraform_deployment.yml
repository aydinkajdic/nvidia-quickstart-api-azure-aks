# This is a basic workflow to help you get started with Actions

name: AZAKSCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.8.0"
          
      - name: Az Login
        uses: actions/checkout@v2
      - run: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az account show
      - name: Terraform Init
        uses: hashicorp/setup-terraform@v2
      - run: |
          terraform init -backend-config=storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT }} -backend-config=container_name=${{ secrets.AZURE_CONTAINER }} -backend-config=key=terraform.tfstate -backend-config=resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP }} -backend-config=subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }} -backend-config=tenant_id=${{ secrets.AZURE_TENANT_ID }} -backend-config=client_id=${{ secrets.AZURE_CLIENT_ID }} -backend-config=client_secret=${{ secrets.AZURE_CLIENT_SECRET }}
        env:
            ARM_CLIENT_ID_UA: ${{ secrets.AZURE_CLIENT_ID }}
            ARM_CLIENT_SECRET_UA: ${{ secrets.AZURE_CLIENT_SECRET }}
            AZURE_AD_TENANT_ID_UA: ${{ secrets.AZURE_TENANT_ID }}
            AZURE_SUBSCRIPTION_ID_UA: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
              
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -var-file="terraform/terraform.tfvars" -out=tf.plan \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -var="ngc_api_key=${{ secrets.NGC_API_KEY }}" \
          -var="ngc_email=${{ secrets.NGC_EMAIL }}" \

      - name: Terraform Apply
        run: terraform apply -auto-approve "tf.plan"